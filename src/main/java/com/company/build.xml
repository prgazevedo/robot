<project name="Robot" basedir="." default="main">
    <description>
        Create a Java Project (JAR) with Ant build script
    </description>
    <property name="projectName" value="Robot" />
    <property name="base.dir" value="."/>
    <property name="base.project" value="/home/pi/PROJECTS/robot/"/>
    <property name="src.dir"     value="${base.project}/src/main/java/"/>
    <property name="package.dir"     value="com/company/"/>
    <property name="build.dir"   value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="jar.dir"     value="${build.dir}/jar"/>
    <property name="dist.lib.dir"     value="${build.dir}/lib"/>
    <property name="main-class"  value="MainRobot"/>
    <property name="property-file" value="robot_properties.xml"/>
    <property name="lib.dir"     value="${base.project}"/>
    <property name="log4j" value="/src/main/resources/log4j2.xml" />
    <path id="classpath">
        <pathelement location="${base.dir}"/>
        <pathelement location="${base.project}/src/main/java"/>
        <pathelement location="${base.project}/src/main/java/com/company"/>
        <fileset dir="${src.dir}/${package.dir}" includes="*.java"/>
        <dirset dir="${src.dir}" includes="comms events graph manager movement navigation state WorkingThreads"/>
        <path refid="jarpath"/>
    </path>

    <path id="jarpath">
        <fileset dir="${lib.dir}" includes="apache-log4j-2.10.0-bin/*.jar"/>
        <fileset dir="${lib.dir}" includes="jSerialComm/*.jar"/>
        <fileset dir="${lib.dir}" includes="jung2-2_0_1/*.jar"/>
    </path>

    <pathconvert property="manifest.classpath" pathsep=" ">
        <path refid="jarpath"/>
        <mapper>
            <chainedmapper>
                <flattenmapper/>
                <globmapper from="*.jar" to="lib/*.jar"/>
            </chainedmapper>
        </mapper>
    </pathconvert>


    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="copy-dependencies">
        <mkdir dir="${dist.lib.dir}" />
        <copy todir="${dist.lib.dir}" flatten="true">
            <path refid="jarpath"/>
        </copy>
    </target>


    <target name="compile">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath"/>
    </target>

    <target name="jar" depends="compile, copy-dependencies">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">

            <manifest>
                <attribute name="Main-Class" value="${package.dir}${main-class}"/>
                <attribute name="Class-Path" value="${manifest.classpath}"/>
            </manifest>
        </jar>
        <echo message="Build Classpath: ${classpath}" />
        <echo message="Manifest Classpath: ${manifest.classpath}" />
    </target>

    <target name="copy-jar">
        <copy file="${jar.dir}/${ant.project.name}.jar" todir="${build.dir}">
        </copy>
    </target>

    <target name="copy-properties">
        <copy file="${base.project}/${property-file}" todir="${build.dir}"/>
        <copy file="${base.project}/${log4j}" todir="${build.dir}"/>
    </target>

    <target name="run" depends="jar,copy-jar,copy-properties">
        <java jar="${build.dir}/${ant.project.name}.jar"  fork="true">
        <jvmarg value="-Dlog4j.configurationFile=log4j2.xml"/>
         </java>
    </target>

    <target name="clean-build" depends="clean,jar"/>

    <target name="main" depends="clean,run"/>

</project>
